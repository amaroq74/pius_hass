esphome:
  name: friar-flush

esp8266:
  board: esp01_1m

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "hsBPrk6uIUzIDdGtqrt+4zgzBWc2+eA3MufQP+hqwVA="

ota:
  password: "458223f6839d03c49156ff3e628feba7"

wifi:
  networks:
    - ssid: !secret wifi_ssid
      password: !secret wifi_password
    - ssid: !secret wifi2_ssid
      password: !secret wifi2_password      

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Friar-Flush Fallback Hotspot"
    password: "psLD0eWQo9mI"

captive_portal:

# Example configuration entry
servo:
  - id: my_servo
    output: pwm_output

# Example output platform
# On ESP32, use ledc output
output:
  - platform: esp8266_pwm
    id: pwm_output
    pin: GPIO13 # D7
    frequency: 50 Hz
    
globals:
  - id: flush_state
    type: boolean
    restore_value: false
    initial_value: "false"
  - id: flush_count
    type: int
    restore_value: false
    initial_value: "0"  

sensor:
  - platform: wifi_signal
    name: "Friar Flush WiFi"
    update_interval: 60s
  - platform: template
    name: "Friar Flush Count"
    update_interval: 60s
    lambda: return id(flush_count);
    
switch:
  - platform: template
    name: "Flush Switch"
    icon: 'mdi:water'
    id: flush_switch
    lambda: return id(flush_state);

    turn_on_action:
      - lambda: id(flush_state) = true;
      - lambda: id(flush_count) += 1;
      - servo.write:
          id: my_servo
          level: -35.0%

    turn_off_action:
      - lambda: id(flush_state) = false;
      - servo.write:
          id: my_servo
          level: -85.0%
          
    on_turn_on:
      then:
        - delay: 3s
        - switch.turn_off: flush_switch

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO14  #D5
      inverted: false
      mode:
        input: true
        pullup: true
    name: Flush Target
    id: flush_target
    filters:
      - delayed_on: 125ms
      - delayed_off: 125ms
      - delayed_on_off: 125ms
    on_press:
      then:
      - switch.turn_on: flush_switch
